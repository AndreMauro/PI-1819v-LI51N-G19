{
	"info": {
		"_postman_id": "af56ad50-b619-4d37-aa21-0cd08cf9b642",
		"name": "Pi1819v",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reset yama",
			"item": [
				{
					"name": "Delete YAMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3b0c654-3df2-4bcd-a6f3-4df002699bee",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Acknowledge is true \", function () {",
									"    var jsonData = pm.response.json();",
									"     pm.expect(jsonData.acknowledged).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:9200/yama/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"yama",
								""
							]
						},
						"description": "This command was made to remove all ES data after tests"
					},
					"response": []
				},
				{
					"name": "Create YAMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b47836b8-a92f-4488-aa86-88a31d217158",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Acknowledge is true \", function () {",
									"    var jsonData = pm.response.json();",
									"     pm.expect(jsonData.index).to.eql(\"yama\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:9200/yama/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"yama",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "resetUsers",
					"item": [
						{
							"name": "Delete Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b3b0c654-3df2-4bcd-a6f3-4df002699bee",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Acknowledge is true \", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData.acknowledged).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:9200/users/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9200",
									"path": [
										"users",
										""
									]
								},
								"description": "This command was made to remove all ES data after tests"
							},
							"response": []
						},
						{
							"name": "Create Users index",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b47836b8-a92f-4488-aa86-88a31d217158",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Acknowledge is true \", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData.index).to.eql(\"yama\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:9200/users/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "9200",
									"path": [
										"users",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "SignUp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "fullname",
									"value": "Andr√© Mauro",
									"type": "text"
								},
								{
									"key": "username",
									"value": "Am",
									"type": "text"
								},
								{
									"key": "password",
									"value": "am",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/yama/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"yama",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/yama/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"yama",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "Am",
									"type": "text"
								},
								{
									"key": "password",
									"value": "am",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/yama/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"yama",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Show users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9200/users/_search",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9200",
							"path": [
								"users",
								"_search"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Artists",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95f309a7-b69c-4cdb-9ad1-1f1437c2b69a",
						"exec": [
							"//Okay",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"First element is Pink\", function () {",
							"    var jsonData = pm.response.json();",
							"     pm.expect(jsonData[0].name).to.eql('Pink Floyd');",
							"});",
							"",
							"pm.test(\"Second element is Pink\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].name).to.eql('Pink');",
							"});",
							"",
							"pm.test(\"Your to have a property listeners\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0]).to.have.a.property('listeners')",
							"});",
							"pm.test(\"Your to have a property mbid\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[3]).to.have.a.property('mbid')",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/yama/searchArtist/{{artist}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"searchArtist",
						"{{artist}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ArtisteTopAlbums",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ee9e3f7-878b-484a-85d6-c67016c9d966",
						"exec": [
							"//Okay",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"FirstAlbumName is Recovery and was played 27401482 times\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].Name).to.eql(\"Recovery\");",
							"   // pm.expect(jsonData[0].playcount).to.eql(27401482);",
							"});",
							"",
							"pm.test(\"ThirdsAlbumName is The Marshall Mathers LP and was played 13527566 times\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[2].Name).to.eql(\"The Marshall Mathers LP\");",
							"    //pm.expect(jsonData[2].playcount).to.eql(13527566);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/yama/artist/{{artistName2}}/Albums",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"artist",
						"{{artistName2}}",
						"Albums"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAlbumsDetail",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "449aea0c-8229-4a9d-aa62-8a548348f1b6",
						"exec": [
							"//Okay",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your albumName\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Feedback\");",
							"});",
							"",
							"pm.test(\"Your to have a property Tracks\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.a.property('tracks');",
							"});",
							"",
							"pm.test(\"First track name is\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tracks[0].name).to.eql('Nha Musica');",
							"});",
							"pm.test(\"Last track name is\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tracks[10].name).to.eql('Um Segundo (feat. Ferro Gaita)');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/yama/artist/{{artistName3}}/Album/{{albumName3}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"artist",
						"{{artistName3}}",
						"Album",
						"{{albumName3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreatePlaylist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e5d53a0e-eb94-4191-8cfd-b8740b0a086e",
						"exec": [
							"//Okay",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"const jsonObject = JSON.parse(responseBody);",
							"pm.environment.set(\"playListId\", jsonObject.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test\",\n\t\"description\": \"testPlayLists\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/yama/playlists",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get PlaylistById",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52469b83-0576-4672-addc-e1b2eeda8eb4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Playlist name should be test \", function () {",
							"    var jsonData = pm.response.json();",
							"     pm.expect(jsonData.name).to.eql(\"test\");",
							"});",
							"",
							"pm.test(\"Playlist description should be testPlayLists \", function () {",
							"    var jsonData = pm.response.json();",
							"     pm.expect(jsonData.description).to.eql(\"testPlayLists\");",
							"});",
							"",
							"pm.test(\"Playlist musics  should be empty \", function () {",
							"    var jsonData = pm.response.json();",
							"     pm.expect(jsonData.musics.length).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/yama/playlists/{{playListId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists",
						"{{playListId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllPlaylists",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d6534a6-b374-4839-8724-4466a1f4e177",
						"exec": [
							"pm.test(\"Test obtaining the playlists array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.a.property(\"playlists\");\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Test playlists if it is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"     pm.expect(jsonData.playlists).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/yama/playlists/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit PlayList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b73ab5de-32d6-4783-93d9-ef9d2bd7c789",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Edited playlist id should be the same \", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"     pm.expect(jsonData.id).to.eql(pm.environment.get(\"playListId\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"newTest\",\n    \"description\": \"newPlaylistTest\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/yama/playlists/{{playListId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists",
						"{{playListId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "InsertMusic on a PlayList",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66c96891-0889-40ba-9ebb-2a775017487f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Edited playlist id should be the same \", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"     pm.expect(jsonData._id).to.eql(pm.environment.get(\"playListId\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"artist\" : \"DaBaby\",\n\t\"track\" : \"Suge\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/yama/playlists/{{playListId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists",
						"{{playListId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteMusic from a playListId",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "365e110b-0aae-492b-a986-a38b08f39897",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:3000/yama/playlists/{{playListId}}?artist={{artist}}&track={{track}} ",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"yama",
						"playlists",
						"{{playListId}}"
					],
					"query": [
						{
							"key": "artist",
							"value": "{{artist}}"
						},
						{
							"key": "track",
							"value": "{{track}} "
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "testar cenas",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9200/yama/playlist/_search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9200",
					"path": [
						"yama",
						"playlist",
						"_search"
					]
				}
			},
			"response": []
		}
	]
}